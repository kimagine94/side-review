name: Java CI with Gradle

# 어떤 브랜치를 체크할 지 설정
on:
  push:
    branches: [ "feature/backend-main" ]
  pull_request:
    branches: [ "feature/backend-main" ]
    
# 설정값 지정. S3 버킷 이름과 위에서 설정한 CodeDeploy 애플리케이션, 그룹 이름을 지정한다.
env:
  S3_BUCKET_NAME: side-review-bucket
  CODE_DEPLOY_APP_NAME: uwhoo-code-deploy
  CODE_DEPLOY_GROUP_NAME: code-deploy-group

# Workflow 설정
jobs:
  build:

    runs-on: ubuntu-latest
	
    # 1. 기본 체크아웃
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '11'
        
    # 2. application.properties를 프로젝트에 포함
    - name: add Application.properties
      run:
        touch ./src/main/resources/application.properties
      shell: bash
      
    - name: copy Application.properties
      run:
        echo "${{ secrets.PROPERTIES }}" > ./src/main/resources/application.properties
      shell: bash
        
    # 3. gradle 권한 설정
    - name: Grand execute permission for gradlew
      run: chmod +x ./gradlew
      shell: bash
      
    # 4. 빌드
    - name: Build with Gradle
      run: ./gradlew build
      shell: bash

	# 5. 빌드 결과 파일(ROOT.war) 이동
    - name: move build files
      run: mv ./build/libs/ROOT.war ./
      shell: bash

	# 6. 빌드 결과와 appspec.yml, 관련 빌드 스크립트 .zip으로 압축
    - name: zip build files
      run: zip -r $GITHUB_SHA.zip ./appspec.yml ./ROOT.war ./scripts

	# 7. AWS 인증과정
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.S3_UPLOAD_ID }}
        aws-secret-access-key: ${{ secrets.S3_UPLOAD_KEY }}
        aws-region: ap-northeast-2

	# 8. AWS S3에 빌드 결과 업로드
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip

	# 9. CodeDeploy 실행
    - name: deploy
      run: |
        aws deploy create-deployment \
        --deployment-config-name CodeDeployDefault.AllAtOnce \
        --application-name ${{ env.CODE_DEPLOY_APP_NAME }} \
        --deployment-group-name ${{ env.CODE_DEPLOY_GROUP_NAME }} \
        --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip
